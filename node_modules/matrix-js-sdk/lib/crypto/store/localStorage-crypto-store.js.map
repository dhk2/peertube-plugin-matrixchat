{"version":3,"file":"localStorage-crypto-store.js","names":["_logger","require","_memoryCryptoStore","E2E_PREFIX","KEY_END_TO_END_ACCOUNT","KEY_CROSS_SIGNING_KEYS","KEY_NOTIFIED_ERROR_DEVICES","KEY_DEVICE_DATA","KEY_INBOUND_SESSION_PREFIX","KEY_INBOUND_SESSION_WITHHELD_PREFIX","KEY_ROOMS_PREFIX","KEY_SESSIONS_NEEDING_BACKUP","keyEndToEndSessions","deviceKey","keyEndToEndSessionProblems","keyEndToEndInboundGroupSession","senderKey","sessionId","keyEndToEndInboundGroupSessionWithheld","keyEndToEndRoomsPrefix","roomId","LocalStorageCryptoStore","MemoryCryptoStore","exists","store","length","i","_store$key","key","startsWith","constructor","countEndToEndSessions","txn","func","count","_this$store$key","_getEndToEndSessions","sessions","getJsonItem","fixedSessions","sid","val","Object","entries","session","getEndToEndSession","getEndToEndSessions","getAllEndToEndSessions","_this$store$key2","split","sess","values","storeEndToEndSession","sessionInfo","setJsonItem","storeEndToEndSessionProblem","type","fixed","problems","push","time","Date","now","sort","a","b","getEndToEndSessionProblem","timestamp","lastProblem","problem","assign","filterOutNotifiedErrorDevices","devices","notifiedErrorDevices","ret","device","userId","deviceInfo","deviceId","getEndToEndInboundGroupSession","senderCurve25519Key","getAllEndToEndInboundGroupSessions","slice","sessionData","addEndToEndInboundGroupSession","existing","storeEndToEndInboundGroupSession","storeEndToEndInboundGroupSessionWithheld","getEndToEndDeviceData","storeEndToEndDeviceData","deviceData","storeEndToEndRoom","roomInfo","getEndToEndRooms","result","prefix","getSessionsNeedingBackup","limit","sessionsNeedingBackup","prototype","hasOwnProperty","call","Promise","resolve","countSessionsNeedingBackup","keys","unmarkSessionsNeedingBackup","markSessionsNeedingBackup","deleteAllData","removeItem","getAccount","accountPickle","storeAccount","getCrossSigningKeys","getSecretStorePrivateKey","storeCrossSigningKeys","storeSecretStorePrivateKey","doTxn","mode","stores","exports","JSON","parse","getItem","e","logger","log","message","stack","setItem","stringify"],"sources":["../../../src/crypto/store/localStorage-crypto-store.ts"],"sourcesContent":["/*\nCopyright 2017 - 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { logger } from \"../../logger\";\nimport { MemoryCryptoStore } from \"./memory-crypto-store\";\nimport { IDeviceData, IProblem, ISession, ISessionInfo, IWithheld, Mode, SecretStorePrivateKeys } from \"./base\";\nimport { IOlmDevice } from \"../algorithms/megolm\";\nimport { IRoomEncryption } from \"../RoomList\";\nimport { ICrossSigningKey } from \"../../client\";\nimport { InboundGroupSessionData } from \"../OlmDevice\";\n\n/**\n * Internal module. Partial localStorage backed storage for e2e.\n * This is not a full crypto store, just the in-memory store with\n * some things backed by localStorage. It exists because indexedDB\n * is broken in Firefox private mode or set to, \"will not remember\n * history\".\n */\n\nconst E2E_PREFIX = \"crypto.\";\nconst KEY_END_TO_END_ACCOUNT = E2E_PREFIX + \"account\";\nconst KEY_CROSS_SIGNING_KEYS = E2E_PREFIX + \"cross_signing_keys\";\nconst KEY_NOTIFIED_ERROR_DEVICES = E2E_PREFIX + \"notified_error_devices\";\nconst KEY_DEVICE_DATA = E2E_PREFIX + \"device_data\";\nconst KEY_INBOUND_SESSION_PREFIX = E2E_PREFIX + \"inboundgroupsessions/\";\nconst KEY_INBOUND_SESSION_WITHHELD_PREFIX = E2E_PREFIX + \"inboundgroupsessions.withheld/\";\nconst KEY_ROOMS_PREFIX = E2E_PREFIX + \"rooms/\";\nconst KEY_SESSIONS_NEEDING_BACKUP = E2E_PREFIX + \"sessionsneedingbackup\";\n\nfunction keyEndToEndSessions(deviceKey: string): string {\n    return E2E_PREFIX + \"sessions/\" + deviceKey;\n}\n\nfunction keyEndToEndSessionProblems(deviceKey: string): string {\n    return E2E_PREFIX + \"session.problems/\" + deviceKey;\n}\n\nfunction keyEndToEndInboundGroupSession(senderKey: string, sessionId: string): string {\n    return KEY_INBOUND_SESSION_PREFIX + senderKey + \"/\" + sessionId;\n}\n\nfunction keyEndToEndInboundGroupSessionWithheld(senderKey: string, sessionId: string): string {\n    return KEY_INBOUND_SESSION_WITHHELD_PREFIX + senderKey + \"/\" + sessionId;\n}\n\nfunction keyEndToEndRoomsPrefix(roomId: string): string {\n    return KEY_ROOMS_PREFIX + roomId;\n}\n\nexport class LocalStorageCryptoStore extends MemoryCryptoStore {\n    public static exists(store: Storage): boolean {\n        const length = store.length;\n        for (let i = 0; i < length; i++) {\n            if (store.key(i)?.startsWith(E2E_PREFIX)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public constructor(private readonly store: Storage) {\n        super();\n    }\n\n    // Olm Sessions\n\n    public countEndToEndSessions(txn: unknown, func: (count: number) => void): void {\n        let count = 0;\n        for (let i = 0; i < this.store.length; ++i) {\n            if (this.store.key(i)?.startsWith(keyEndToEndSessions(\"\"))) ++count;\n        }\n        func(count);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    private _getEndToEndSessions(deviceKey: string): Record<string, ISessionInfo> {\n        const sessions = getJsonItem(this.store, keyEndToEndSessions(deviceKey));\n        const fixedSessions: Record<string, ISessionInfo> = {};\n\n        // fix up any old sessions to be objects rather than just the base64 pickle\n        for (const [sid, val] of Object.entries(sessions || {})) {\n            if (typeof val === \"string\") {\n                fixedSessions[sid] = {\n                    session: val,\n                };\n            } else {\n                fixedSessions[sid] = val;\n            }\n        }\n\n        return fixedSessions;\n    }\n\n    public getEndToEndSession(\n        deviceKey: string,\n        sessionId: string,\n        txn: unknown,\n        func: (session: ISessionInfo) => void,\n    ): void {\n        const sessions = this._getEndToEndSessions(deviceKey);\n        func(sessions[sessionId] || {});\n    }\n\n    public getEndToEndSessions(\n        deviceKey: string,\n        txn: unknown,\n        func: (sessions: { [sessionId: string]: ISessionInfo }) => void,\n    ): void {\n        func(this._getEndToEndSessions(deviceKey) || {});\n    }\n\n    public getAllEndToEndSessions(txn: unknown, func: (session: ISessionInfo) => void): void {\n        for (let i = 0; i < this.store.length; ++i) {\n            if (this.store.key(i)?.startsWith(keyEndToEndSessions(\"\"))) {\n                const deviceKey = this.store.key(i)!.split(\"/\")[1];\n                for (const sess of Object.values(this._getEndToEndSessions(deviceKey))) {\n                    func(sess);\n                }\n            }\n        }\n    }\n\n    public storeEndToEndSession(deviceKey: string, sessionId: string, sessionInfo: ISessionInfo, txn: unknown): void {\n        const sessions = this._getEndToEndSessions(deviceKey) || {};\n        sessions[sessionId] = sessionInfo;\n        setJsonItem(this.store, keyEndToEndSessions(deviceKey), sessions);\n    }\n\n    public async storeEndToEndSessionProblem(deviceKey: string, type: string, fixed: boolean): Promise<void> {\n        const key = keyEndToEndSessionProblems(deviceKey);\n        const problems = getJsonItem<IProblem[]>(this.store, key) || [];\n        problems.push({ type, fixed, time: Date.now() });\n        problems.sort((a, b) => {\n            return a.time - b.time;\n        });\n        setJsonItem(this.store, key, problems);\n    }\n\n    public async getEndToEndSessionProblem(deviceKey: string, timestamp: number): Promise<IProblem | null> {\n        const key = keyEndToEndSessionProblems(deviceKey);\n        const problems = getJsonItem<IProblem[]>(this.store, key) || [];\n        if (!problems.length) {\n            return null;\n        }\n        const lastProblem = problems[problems.length - 1];\n        for (const problem of problems) {\n            if (problem.time > timestamp) {\n                return Object.assign({}, problem, { fixed: lastProblem.fixed });\n            }\n        }\n        if (lastProblem.fixed) {\n            return null;\n        } else {\n            return lastProblem;\n        }\n    }\n\n    public async filterOutNotifiedErrorDevices(devices: IOlmDevice[]): Promise<IOlmDevice[]> {\n        const notifiedErrorDevices =\n            getJsonItem<MemoryCryptoStore[\"notifiedErrorDevices\"]>(this.store, KEY_NOTIFIED_ERROR_DEVICES) || {};\n        const ret: IOlmDevice[] = [];\n\n        for (const device of devices) {\n            const { userId, deviceInfo } = device;\n            if (userId in notifiedErrorDevices) {\n                if (!(deviceInfo.deviceId in notifiedErrorDevices[userId])) {\n                    ret.push(device);\n                    notifiedErrorDevices[userId][deviceInfo.deviceId] = true;\n                }\n            } else {\n                ret.push(device);\n                notifiedErrorDevices[userId] = { [deviceInfo.deviceId]: true };\n            }\n        }\n\n        setJsonItem(this.store, KEY_NOTIFIED_ERROR_DEVICES, notifiedErrorDevices);\n\n        return ret;\n    }\n\n    // Inbound Group Sessions\n\n    public getEndToEndInboundGroupSession(\n        senderCurve25519Key: string,\n        sessionId: string,\n        txn: unknown,\n        func: (groupSession: InboundGroupSessionData | null, groupSessionWithheld: IWithheld | null) => void,\n    ): void {\n        func(\n            getJsonItem(this.store, keyEndToEndInboundGroupSession(senderCurve25519Key, sessionId)),\n            getJsonItem(this.store, keyEndToEndInboundGroupSessionWithheld(senderCurve25519Key, sessionId)),\n        );\n    }\n\n    public getAllEndToEndInboundGroupSessions(txn: unknown, func: (session: ISession | null) => void): void {\n        for (let i = 0; i < this.store.length; ++i) {\n            const key = this.store.key(i);\n            if (key?.startsWith(KEY_INBOUND_SESSION_PREFIX)) {\n                // we can't use split, as the components we are trying to split out\n                // might themselves contain '/' characters. We rely on the\n                // senderKey being a (32-byte) curve25519 key, base64-encoded\n                // (hence 43 characters long).\n\n                func({\n                    senderKey: key.slice(KEY_INBOUND_SESSION_PREFIX.length, KEY_INBOUND_SESSION_PREFIX.length + 43),\n                    sessionId: key.slice(KEY_INBOUND_SESSION_PREFIX.length + 44),\n                    sessionData: getJsonItem(this.store, key)!,\n                });\n            }\n        }\n        func(null);\n    }\n\n    public addEndToEndInboundGroupSession(\n        senderCurve25519Key: string,\n        sessionId: string,\n        sessionData: InboundGroupSessionData,\n        txn: unknown,\n    ): void {\n        const existing = getJsonItem(this.store, keyEndToEndInboundGroupSession(senderCurve25519Key, sessionId));\n        if (!existing) {\n            this.storeEndToEndInboundGroupSession(senderCurve25519Key, sessionId, sessionData, txn);\n        }\n    }\n\n    public storeEndToEndInboundGroupSession(\n        senderCurve25519Key: string,\n        sessionId: string,\n        sessionData: InboundGroupSessionData,\n        txn: unknown,\n    ): void {\n        setJsonItem(this.store, keyEndToEndInboundGroupSession(senderCurve25519Key, sessionId), sessionData);\n    }\n\n    public storeEndToEndInboundGroupSessionWithheld(\n        senderCurve25519Key: string,\n        sessionId: string,\n        sessionData: IWithheld,\n        txn: unknown,\n    ): void {\n        setJsonItem(this.store, keyEndToEndInboundGroupSessionWithheld(senderCurve25519Key, sessionId), sessionData);\n    }\n\n    public getEndToEndDeviceData(txn: unknown, func: (deviceData: IDeviceData | null) => void): void {\n        func(getJsonItem(this.store, KEY_DEVICE_DATA));\n    }\n\n    public storeEndToEndDeviceData(deviceData: IDeviceData, txn: unknown): void {\n        setJsonItem(this.store, KEY_DEVICE_DATA, deviceData);\n    }\n\n    public storeEndToEndRoom(roomId: string, roomInfo: IRoomEncryption, txn: unknown): void {\n        setJsonItem(this.store, keyEndToEndRoomsPrefix(roomId), roomInfo);\n    }\n\n    public getEndToEndRooms(txn: unknown, func: (rooms: Record<string, IRoomEncryption>) => void): void {\n        const result: Record<string, IRoomEncryption> = {};\n        const prefix = keyEndToEndRoomsPrefix(\"\");\n\n        for (let i = 0; i < this.store.length; ++i) {\n            const key = this.store.key(i);\n            if (key?.startsWith(prefix)) {\n                const roomId = key.slice(prefix.length);\n                result[roomId] = getJsonItem(this.store, key)!;\n            }\n        }\n        func(result);\n    }\n\n    public getSessionsNeedingBackup(limit: number): Promise<ISession[]> {\n        const sessionsNeedingBackup = getJsonItem<string[]>(this.store, KEY_SESSIONS_NEEDING_BACKUP) || {};\n        const sessions: ISession[] = [];\n\n        for (const session in sessionsNeedingBackup) {\n            if (Object.prototype.hasOwnProperty.call(sessionsNeedingBackup, session)) {\n                // see getAllEndToEndInboundGroupSessions for the magic number explanations\n                const senderKey = session.slice(0, 43);\n                const sessionId = session.slice(44);\n                this.getEndToEndInboundGroupSession(senderKey, sessionId, null, (sessionData) => {\n                    sessions.push({\n                        senderKey: senderKey,\n                        sessionId: sessionId,\n                        sessionData: sessionData!,\n                    });\n                });\n                if (limit && sessions.length >= limit) {\n                    break;\n                }\n            }\n        }\n        return Promise.resolve(sessions);\n    }\n\n    public countSessionsNeedingBackup(): Promise<number> {\n        const sessionsNeedingBackup = getJsonItem(this.store, KEY_SESSIONS_NEEDING_BACKUP) || {};\n        return Promise.resolve(Object.keys(sessionsNeedingBackup).length);\n    }\n\n    public unmarkSessionsNeedingBackup(sessions: ISession[]): Promise<void> {\n        const sessionsNeedingBackup =\n            getJsonItem<{\n                [senderKeySessionId: string]: string;\n            }>(this.store, KEY_SESSIONS_NEEDING_BACKUP) || {};\n        for (const session of sessions) {\n            delete sessionsNeedingBackup[session.senderKey + \"/\" + session.sessionId];\n        }\n        setJsonItem(this.store, KEY_SESSIONS_NEEDING_BACKUP, sessionsNeedingBackup);\n        return Promise.resolve();\n    }\n\n    public markSessionsNeedingBackup(sessions: ISession[]): Promise<void> {\n        const sessionsNeedingBackup =\n            getJsonItem<{\n                [senderKeySessionId: string]: boolean;\n            }>(this.store, KEY_SESSIONS_NEEDING_BACKUP) || {};\n        for (const session of sessions) {\n            sessionsNeedingBackup[session.senderKey + \"/\" + session.sessionId] = true;\n        }\n        setJsonItem(this.store, KEY_SESSIONS_NEEDING_BACKUP, sessionsNeedingBackup);\n        return Promise.resolve();\n    }\n\n    /**\n     * Delete all data from this store.\n     *\n     * @returns Promise which resolves when the store has been cleared.\n     */\n    public deleteAllData(): Promise<void> {\n        this.store.removeItem(KEY_END_TO_END_ACCOUNT);\n        return Promise.resolve();\n    }\n\n    // Olm account\n\n    public getAccount(txn: unknown, func: (accountPickle: string | null) => void): void {\n        const accountPickle = getJsonItem<string>(this.store, KEY_END_TO_END_ACCOUNT);\n        func(accountPickle);\n    }\n\n    public storeAccount(txn: unknown, accountPickle: string): void {\n        setJsonItem(this.store, KEY_END_TO_END_ACCOUNT, accountPickle);\n    }\n\n    public getCrossSigningKeys(txn: unknown, func: (keys: Record<string, ICrossSigningKey> | null) => void): void {\n        const keys = getJsonItem<Record<string, ICrossSigningKey>>(this.store, KEY_CROSS_SIGNING_KEYS);\n        func(keys);\n    }\n\n    public getSecretStorePrivateKey<K extends keyof SecretStorePrivateKeys>(\n        txn: unknown,\n        func: (key: SecretStorePrivateKeys[K] | null) => void,\n        type: K,\n    ): void {\n        const key = getJsonItem<SecretStorePrivateKeys[K]>(this.store, E2E_PREFIX + `ssss_cache.${type}`);\n        func(key);\n    }\n\n    public storeCrossSigningKeys(txn: unknown, keys: Record<string, ICrossSigningKey>): void {\n        setJsonItem(this.store, KEY_CROSS_SIGNING_KEYS, keys);\n    }\n\n    public storeSecretStorePrivateKey<K extends keyof SecretStorePrivateKeys>(\n        txn: unknown,\n        type: K,\n        key: SecretStorePrivateKeys[K],\n    ): void {\n        setJsonItem(this.store, E2E_PREFIX + `ssss_cache.${type}`, key);\n    }\n\n    public doTxn<T>(mode: Mode, stores: Iterable<string>, func: (txn: unknown) => T): Promise<T> {\n        return Promise.resolve(func(null));\n    }\n}\n\nfunction getJsonItem<T>(store: Storage, key: string): T | null {\n    try {\n        // if the key is absent, store.getItem() returns null, and\n        // JSON.parse(null) === null, so this returns null.\n        return JSON.parse(store.getItem(key)!);\n    } catch (e) {\n        logger.log(\"Error: Failed to get key %s: %s\", key, (<Error>e).message);\n        logger.log((<Error>e).stack);\n    }\n    return null;\n}\n\nfunction setJsonItem<T>(store: Storage, key: string, val: T): void {\n    store.setItem(key, JSON.stringify(val));\n}\n"],"mappings":"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"}