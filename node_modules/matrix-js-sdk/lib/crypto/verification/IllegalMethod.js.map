{"version":3,"file":"IllegalMethod.js","names":["_Base","require","IllegalMethod","Base","constructor","args","_defineProperty2","default","Error","factory","channel","baseApis","userId","deviceId","startEvent","request","NAME","exports"],"sources":["../../../src/crypto/verification/IllegalMethod.ts"],"sourcesContent":["/*\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * Verification method that is illegal to have (cannot possibly\n * do verification with this method).\n */\n\nimport { VerificationBase as Base, VerificationEvent, VerificationEventHandlerMap } from \"./Base\";\nimport { IVerificationChannel } from \"./request/Channel\";\nimport { MatrixClient } from \"../../client\";\nimport { MatrixEvent } from \"../../models/event\";\nimport { VerificationRequest } from \"./request/VerificationRequest\";\n\nexport class IllegalMethod extends Base<VerificationEvent, VerificationEventHandlerMap> {\n    public static factory(\n        channel: IVerificationChannel,\n        baseApis: MatrixClient,\n        userId: string,\n        deviceId: string,\n        startEvent: MatrixEvent,\n        request: VerificationRequest,\n    ): IllegalMethod {\n        return new IllegalMethod(channel, baseApis, userId, deviceId, startEvent, request);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    public static get NAME(): string {\n        // Typically the name will be something else, but to complete\n        // the contract we offer a default one here.\n        return \"org.matrix.illegal_method\";\n    }\n\n    protected doVerification = async (): Promise<void> => {\n        throw new Error(\"Verification is not possible with this method\");\n    };\n}\n"],"mappings":";;;;;;;;AAqBA,IAAAA,KAAA,GAAAC,OAAA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAQO,MAAMC,aAAa,SAASC,sBAAI,CAAiD;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,0BAmBzD,YAA2B;MAClD,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;IACpE,CAAC;EAAA;EApBD,OAAcC,OAAOA,CACjBC,OAA6B,EAC7BC,QAAsB,EACtBC,MAAc,EACdC,QAAgB,EAChBC,UAAuB,EACvBC,OAA4B,EACf;IACb,OAAO,IAAIb,aAAa,CAACQ,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,CAAC;EACtF;;EAEA;EACA,WAAkBC,IAAIA,CAAA,EAAW;IAC7B;IACA;IACA,OAAO,2BAA2B;EACtC;AAKJ;AAACC,OAAA,CAAAf,aAAA,GAAAA,aAAA"}