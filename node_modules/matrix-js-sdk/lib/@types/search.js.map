{"version":3,"file":"search.js","names":["GroupKey","SearchOrderBy","exports"],"sources":["../../src/@types/search.ts"],"sourcesContent":["/*\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// Types relating to the /search API\n\nimport { IRoomEvent, IStateEvent } from \"../sync-accumulator\";\nimport { IRoomEventFilter } from \"../filter\";\nimport { SearchResult } from \"../models/search-result\";\n\n/* eslint-disable camelcase */\nexport interface IEventWithRoomId extends IRoomEvent {\n    room_id: string;\n}\n\nexport interface IStateEventWithRoomId extends IStateEvent {\n    room_id: string;\n}\n\nexport interface IMatrixProfile {\n    avatar_url?: string;\n    displayname?: string;\n}\n\nexport interface IResultContext {\n    events_before: IEventWithRoomId[];\n    events_after: IEventWithRoomId[];\n    profile_info: Record<string, IMatrixProfile>;\n    start?: string;\n    end?: string;\n}\n\nexport interface ISearchResult {\n    rank: number;\n    result: IEventWithRoomId;\n    context: IResultContext;\n}\n\nenum GroupKey {\n    RoomId = \"room_id\",\n    Sender = \"sender\",\n}\n\nexport interface IResultRoomEvents {\n    count: number;\n    highlights: string[];\n    results: ISearchResult[];\n    state?: { [roomId: string]: IStateEventWithRoomId[] };\n    groups?: {\n        [groupKey in GroupKey]: {\n            [value: string]: {\n                next_batch?: string;\n                order: number;\n                results: string[];\n            };\n        };\n    };\n    next_batch?: string;\n}\n\ninterface IResultCategories {\n    room_events: IResultRoomEvents;\n}\n\nexport type SearchKey = \"content.body\" | \"content.name\" | \"content.topic\";\n\nexport enum SearchOrderBy {\n    Recent = \"recent\",\n    Rank = \"rank\",\n}\n\nexport interface ISearchRequestBody {\n    search_categories: {\n        room_events: {\n            search_term: string;\n            keys?: SearchKey[];\n            filter?: IRoomEventFilter;\n            order_by?: SearchOrderBy;\n            event_context?: {\n                before_limit?: number;\n                after_limit?: number;\n                include_profile?: boolean;\n            };\n            include_state?: boolean;\n            groupings?: {\n                group_by: {\n                    key: GroupKey;\n                }[];\n            };\n        };\n    };\n}\n\nexport interface ISearchResponse {\n    search_categories: IResultCategories;\n}\n\nexport interface ISearchResults {\n    _query?: ISearchRequestBody;\n    results: SearchResult[];\n    highlights: string[];\n    count?: number;\n    next_batch?: string;\n    pendingRequest?: Promise<ISearchResults>;\n    abortSignal?: AbortSignal;\n}\n/* eslint-enable camelcase */\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAAA,IA4BKA,QAAQ;AAAA,WAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;AAAA,GAARA,QAAQ,KAARA,QAAQ;AAAA,IA4BDC,aAAa;AAAAC,OAAA,CAAAD,aAAA,GAAAA,aAAA;AAAA,WAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;AAAA,GAAbA,aAAa,KAAAC,OAAA,CAAAD,aAAA,GAAbA,aAAa;AAwCzB"}