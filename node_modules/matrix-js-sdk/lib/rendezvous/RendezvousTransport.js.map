{"version":3,"file":"RendezvousTransport.js","names":[],"sources":["../../src/rendezvous/RendezvousTransport.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { RendezvousFailureListener, RendezvousFailureReason } from \".\";\n\nexport interface RendezvousTransportDetails {\n    type: string;\n}\n\n/**\n * Interface representing a generic rendezvous transport.\n */\nexport interface RendezvousTransport<T> {\n    /**\n     * Ready state of the transport. This is set to true when the transport is ready to be used.\n     */\n    readonly ready: boolean;\n\n    /**\n     * Listener for cancellation events. This is called when the rendezvous is cancelled or fails.\n     */\n    onFailure?: RendezvousFailureListener;\n\n    /**\n     * @returns the transport details that can be encoded in a QR or similar\n     */\n    details(): Promise<RendezvousTransportDetails>;\n\n    /**\n     * Send data via the transport.\n     * @param data - the data itself\n     */\n    send(data: T): Promise<void>;\n\n    /**\n     * Receive data from the transport.\n     */\n    receive(): Promise<Partial<T> | undefined>;\n\n    /**\n     * Cancel the rendezvous. This will call `onCancelled()` if it is set.\n     * @param reason - the reason for the cancellation/failure\n     */\n    cancel(reason: RendezvousFailureReason): Promise<void>;\n}\n"],"mappings":""}